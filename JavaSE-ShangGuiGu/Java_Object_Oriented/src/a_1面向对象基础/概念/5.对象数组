

    【实例化对象时用数组】
        String str1 = new String(); 这是正常的String类型的字符串一个
        String[] str2 = new String[20];  这就是字符串类型的数组,空间为20
        在堆内存里开辟了20个连续的空间用来存放20个字符串
        通过首地址值加索引取到每一个具体的对象(数组里面也叫做元素)
        堆内存开辟出来空间后首地址返回给前面的变量s2


    【自己的类】
        Student s2 = new Student(); 实例化学生类型的对象s2,s2可以调用学生类里的各种方法与属性
        Students[] s2 = new Student[20]; 实例化学生类的数组,长度为20
        在堆空间开辟了20个Student类型的空间用来存20给Student类型的对象
        堆空间的首地址返回给前面的引用变量s2,通过s2加下标索引来设置每个对象的属性
        s2[0].name = "张三"
        这句命令就是通过首地址加下标索引找到堆空间Student类型数组的第一个元素,并设置其name属性为张三

    【核心】

        数组对象 --> 其实就是某个类中的对象连续排列组成了数组
        就像我们字符串类型的数组 String[] s = new String[10];
        在堆内存开辟了一块长度为10的空间,s[0] = "张三" 为第一个元素赋值(注意只能是字符串类型的值)因为数组是字符串类型的


        我们自己的类对象 Students[] stu = new Students[20];
        在堆内存开辟了一块长度为20的连续空间,用来存什么?
        其实前面的Students就已经告诉了计算机是用来存Students类型的对象的
        字符串什么的都是一样的String[] str = new String[10];放进去一个整形的直接报错,因为数组的类型就是String
        我们的Students类型的数组道理也是一样的,只能存放我们Students类型的变量,其他的任何值都会直接报错
        所以我们为每个空间赋值 stu[1] = new Students1(); 这样

    【思想】

        将数组与对象两个概念类型的东西分开
        Students[] stu = new Students[20]; 这句话只是创建了一个Students类型的数组(长度为20),20个连续空间并没有赋值(值得类型为对象)
        stu[0] = new Students(); 这才是为数组的第一个元素赋值(数组元素值得类型是Students类型对象)
        stu[0].number = 1; 再去设置每个对象的属性,调用每个对象的方法就ok

        String[] str = new String[10]; 同样的这只是创建了一个长度为10的字符串类型数组并没有赋值
        str[0] = "张三" 这才是为数组的第一个位置赋为(值得类型为字符串)

        这就是数组












