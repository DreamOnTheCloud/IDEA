package BasicGrammer;

public class 循环嵌套 {
    /*
        【1】循环嵌套:将一个循环结构A,声明在另一个循环结构B的循环体中
            外层循环B ， 内层循环A;
        【2】外层循环执行一次 ，内层循环执行一遍 ，假设外层循环执行m次内层n次 内层循环总数就是 m * n 次
    */
    public static void main(String[] args) {
        //输出 4 行 6 列的五角星-------------------------------------------------------------------------------------------
        for (int i = 0 ; i < 4 ; i++){
            for (int j = 0 ; j < 6 ; j++){  //外层循环的循环体① -- 《内层循环》,外层执行4次,内层循环每次6次,内层循环体共执行了24次
                System.out.print("★");
            }
            System.out.println(); //外层循环的循环体② -- 《换行》,只执行四次因为外层就四次
        }

        //输出正三角------------------------------------------------------------------------------------------------------
        for (int i = 0 ; i < 5 ; i++){  //外层固定循环五次为行数
            //内层循环递加，因为i就是从0 ~ 4依次递增
            // 让j也从0递增小于等于i, i的值每次加一第五次就是4,但j每次初始化为0都是小于等于i,最后0~5就是打印个了
            for (int j = 0 ; j <= i ; j++) {
                System.out.print("★");
            }
            System.out.println();
        }

        //输出到三角------------------------------------------------------------------------------------------------------
        for (int i = 0 ; i < 5 ; i++){  //外层固定循环五次
            //内层循环直接定义最大数(第一列的个数)
            //让此数大于一个递增的数(i从零开始),因为i是递增的所以每次少一个;最后j--
            for (int j = 5 ; j > i ; j--) {
                System.out.print("★");
            }
            System.out.println();
        }

        //输出菱形------------------------------------------------------------------------------------------------------
        for (int i = 0 ; i < 5 ; i++){  //上层菱形五行所以我们行数为5,每次内层循环都是由空格与★组成 空格递减,五角星递增先打印空格
            //空格思路,空格递减第一次空格为四个直接从4起始 大于i递增变量 ①4 > 0, 3 > 0, 2 > 0, 1 > 0;4--②4 > 1, 3 > 1, 2 > 1;4--
            //循环步骤,先外层循环i = 0 , 下来之后执行内层第一个循环,执行完毕执行内层第二个循环完毕后外层循环变为1在重复执行
            for (int j = 4 ; j > i ; j--) {
                System.out.print(" ");
            }
            //星星思路,星星递增
            for (int k = 0 ; k <= i ; k++) {
                System.out.print("* "); // 别忘了星星与星星之间还有空格
            }
            System.out.println();
        }
        for (int i = 0 ; i < 4 ; i++){  //下层菱形四行所以我们行数为4,每次内层循环都是由空格与★组成 空格递增,五角星递减先打印空格
            //空格思路,空格递增,直接让控制空格的变量从0开始,小于等于一个递增的值;依次++即可
            //循环步骤,先外层循环i = 0 , 下来之后执行内层第一个循环,执行完毕执行内层第二个循环完毕后外层循环变为1在重复执行
            for (int j = 0 ; j <= i ; j++) {
                System.out.print(" ");
            }
            //星星思路,星星递减,直接让控制星星的变量等于一个最大的值;让其大于等于最小的递增值;依次--即可
            for (int k = 4 ; k > i ; k--) {
                System.out.print("* ");
            }
            System.out.println();
        }

        //九九乘法表------------------------------------------------------------------------------------------------------
        for (int i = 1 ; i < 10 ; i++){
            for (int j = 1 ; j <= i ; j++){  //核心就是第二层,外层就是1~9的递增,内层每次从1开始递增乘外层的每个数
                System.out.print(j + "*" + i + "=" + i * j + " ");
            }
            System.out.println();
        }
    }
}
